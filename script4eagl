--[[


╭━━━┳━╮╭━┳━━━┳╮╱╱╭━━┳━━━╮
┃╭━━┫┃╰╯┃┃╭━╮┃┃╱╱╰┫┣┫╭━╮┃
┃╰━━┫╭╮╭╮┃╰━╯┃┃╱╱╱┃┃┃┃╱╰╯
┃╭━━┫┃┃┃┃┃╭━━┫┃╱╭╮┃┃┃┃╱╭╮
┃╰━━┫┃┃┃┃┃┃╱╱┃╰━╯┣┫┣┫╰━╯┃
╰━━━┻╯╰╯╰┻╯╱╱╰━━━┻━━┻━━━╯

dm emplic on discord 4 suggestions
]]--


local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v81=v2(v0(v30,16));if v19 then local v88=v5(v81,v19);v19=nil;return v88;else return v81;end end end);local function v20(v31,v32,v33) if v33 then local v82=(v31/((1 + 1)^(v32-(2 -1))))%((1 + 1)^(((v33-(2 -1)) -(v32-((1 + 0) -0))) + (2 -1))) ;return v82-(v82%((1577 -(892 + 65)) -(555 + 64))) ;else local v83=931 -(857 + 74) ;local v84;while true do if (v83==((685 -(32 + 85)) -(367 + 201))) then v84=2^(v32-(1066 -(68 + 997))) ;return (((v31%(v84 + v84))>=v84) and ((910 + 18) -(214 + 713))) or ((0 -0) -0) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (3 -1) );v18=v18 + (3 -1) ;return (v36 * (606 -(87 + 263))) + v35 ;end local function v23() local v37=180 -(67 + 113) ;local v38;local v39;local v40;local v41;while true do if (v37==1) then return (v41 * (66680831 -49903615)) + (v40 * (66488 -((2270 -1468) + 150))) + (v39 * ((402 + 287) -433)) + v38 ;end if (v37==(0 + 0)) then v38,v39,v40,v41=v1(v16,v18,v18 + (7 -4) );v18=v18 + 3 + 1 ;v37=(1311 -313) -(915 + 82) ;end end end local function v24() local v42=v23();local v43=v23();local v44=1188 -(1069 + (890 -(201 + 571))) ;local v45=(v20(v43,2 -1 ,43 -23 ) * (2^(6 + 26))) + v42 ;local v46=v20(v43,21,54 -23 );local v47=((v20(v43,32 + 0 )==(792 -(368 + 423))) and  -(3 -(1140 -(116 + 1022)))) or (19 -(10 + 8)) ;if (v46==(0 -0)) then if (v45==(0 -0)) then return v47 * (442 -(245 + 171 + 26)) ;else local v89=0 -(0 -0) ;while true do if ((0 + 0)==v89) then v46=1;v44=0;break;end end end elseif (v46==(3621 -1574)) then return ((v45==(438 -(145 + 293))) and (v47 * (((1530 -1099) -(44 + 386))/0))) or (v47 * NaN) ;end return v8(v47,v46-(2509 -(998 + 488)) ) * (v44 + (v45/((1 + 1)^(43 + 9)))) ;end local function v25(v48) local v49;if  not v48 then v48=v23();if (v48==(859 -(814 + 45))) then return "";end end v49=v3(v16,v18,(v18 + v48) -(2 -1) );v18=v18 + v48 ;local v50={};for v64=1 + 0 , #v49 do v50[v64]=v2(v1(v3(v49,v64,v64)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=0 -0 ;local v52;local v53;local v54;local v55;local v56;local v57;while true do local v66=0;while true do if (v66==0) then if ((1 + 0)==v51) then local v94=574 -(507 + 67) ;while true do if (1~=v94) then else for v107=1,v56 do local v108=0;local v109;local v110;local v111;while true do if (v108~=0) then else local v115=0;while true do if (v115~=1) then else v108=1750 -(1013 + 736) ;break;end if (v115==(0 + 0)) then v109=0;v110=nil;v115=2 -1 ;end end end if (1~=v108) then else v111=nil;while true do if (v109~=1) then else if (v110==(3 -2)) then v111=v21()~=(867 -(550 + 317)) ;elseif (v110==2) then v111=v24();elseif (v110~=3) then else v111=v25();end v57[v107]=v111;break;end if (v109==(0 -0)) then local v257=0 -0 ;local v258;while true do if (v257~=(0 -0)) then else v258=285 -(134 + 151) ;while true do if (v258~=0) then else v110=v21();v111=nil;v258=1666 -(970 + 695) ;end if (v258==(1 -0)) then v109=1991 -(582 + 1408) ;break;end end break;end end end end break;end end end v55[10 -7 ]=v21();v94=2;end if (v94~=0) then else v56=v23();v57={};v94=1 -0 ;end if (2==v94) then v51=2;break;end end end if ((0 -0)==v51) then local v95=1824 -(1195 + 629) ;local v96;while true do if (v95~=0) then else v96=0 -0 ;while true do if (v96~=0) then else v52={};v53={};v96=242 -(187 + 54) ;end if (v96==(782 -(162 + 618))) then v51=1 + 0 ;break;end if (1==v96) then v54={};v55={v52,v53,nil,v54};v96=3 -1 ;end end break;end end end v66=1 -0 ;end if (v66~=1) then else if (v51~=(1 + 1)) then else for v97=1,v23() do local v98=v21();if (v20(v98,1,1637 -(1373 + 263) )~=(1000 -(451 + 549))) then else local v102=0;local v103;local v104;local v105;local v106;while true do if ((1 + 1)==v102) then while true do if (v103==2) then local v208=0;local v209;while true do if (v208==0) then v209=0 -0 ;while true do if (v209~=(0 -0)) then else if (v20(v105,1,1)==(1385 -(746 + 638))) then v106[2]=v57[v106[2]];end if (v20(v105,2,2)==(1 + 0)) then v106[4 -1 ]=v57[v106[344 -(218 + 123) ]];end v209=1582 -(1535 + 46) ;end if (v209~=1) then else v103=3;break;end end break;end end end if (v103==1) then local v210=0 + 0 ;local v211;while true do if (v210==(0 + 0)) then v211=560 -(306 + 254) ;while true do if (v211==0) then v106={v22(),v22(),nil,nil};if (v104==(0 -0)) then local v445=1467 -(899 + 568) ;local v446;while true do if (v445==(0 + 0)) then v446=0 -0 ;while true do if (v446~=(603 -(268 + 335))) then else v106[3]=v22();v106[294 -(60 + 230) ]=v22();break;end end break;end end elseif (v104==(573 -(426 + 146))) then v106[1 + 2 ]=v23();elseif (v104==(1458 -(282 + 1174))) then v106[3]=v23() -(2^16) ;elseif (v104~=(814 -(569 + 242))) then else local v467=0 -0 ;local v468;while true do if (v467==0) then v468=0;while true do if (v468==0) then v106[1 + 2 ]=v23() -((1026 -(706 + 318))^(1267 -(721 + 530))) ;v106[1275 -(945 + 326) ]=v22();break;end end break;end end end v211=2 -1 ;end if (v211~=(1 + 0)) then else v103=702 -(271 + 429) ;break;end end break;end end end if (v103==3) then if (v20(v105,3,3)==1) then v106[4 + 0 ]=v57[v106[1504 -(1408 + 92) ]];end v52[v97]=v106;break;end if (v103==0) then local v213=1086 -(461 + 625) ;local v214;while true do if (v213~=(1288 -(993 + 295))) then else v214=0;while true do if ((1 + 0)==v214) then v103=1172 -(418 + 753) ;break;end if ((0 + 0)==v214) then v104=v20(v98,1 + 1 ,1 + 2 );v105=v20(v98,2 + 2 ,6);v214=530 -(406 + 123) ;end end break;end end end end break;end if ((1769 -(1749 + 20))==v102) then local v112=0;local v113;while true do if (v112==0) then v113=0;while true do if (v113~=1) then else v102=1;break;end if ((0 + 0)==v113) then v103=0;v104=nil;v113=1;end end break;end end end if (v102~=(1323 -(1249 + 73))) then else local v114=0;while true do if (v114~=0) then else v105=nil;v106=nil;v114=1;end if ((1 + 0)==v114) then v102=1147 -(466 + 679) ;break;end end end end end end for v99=1,v23() do v53[v99-1 ]=v28();end return v55;end break;end end end end local function v29(v58,v59,v60) local v61=v58[1];local v62=v58[2];local v63=v58[3];return function(...) local v67=v61;local v68=v62;local v69=v63;local v70=v27;local v71=1;local v72= -1;local v73={};local v74={...};local v75=v12("#",...) -1 ;local v76={};local v77={};for v85=0,v75 do if (v85>=v69) then v73[v85-v69 ]=v74[v85 + 1 ];else v77[v85]=v74[v85 + 1 ];end end local v78=(v75-v69) + 1 ;local v79;local v80;while true do v79=v67[v71];v80=v79[1];if (v80<=40) then if (v80<=19) then if (v80<=9) then if (v80<=4) then if (v80<=1) then if (v80==0) then local v116=0;local v117;while true do if (v116==0) then v117=v79[2];v77[v117]=v77[v117]();break;end end else v77[v79[2]]=v29(v68[v79[3]],nil,v60);end elseif (v80<=2) then v71=v79[3];elseif (v80==3) then v77[v79[2]]=v59[v79[3]];else local v261=0;local v262;while true do if (0==v261) then v262=v79[2];v77[v262](v77[v262 + 1 ]);break;end end end elseif (v80<=6) then if (v80>5) then if (v77[v79[2]]==v79[4]) then v71=v71 + 1 ;else v71=v79[3];end else local v120=v79[2];local v121={};for v215=1, #v76 do local v216=0;local v217;while true do if (v216==0) then v217=v76[v215];for v393=0, #v217 do local v394=0;local v395;local v396;local v397;while true do if (v394==1) then v397=v395[2];if ((v396==v77) and (v397>=v120)) then local v456=0;while true do if (v456==0) then v121[v397]=v396[v397];v395[1]=v121;break;end end end break;end if (v394==0) then v395=v217[v393];v396=v395[1];v394=1;end end end break;end end end end elseif (v80<=7) then local v122=v79[2];do return v77[v122](v13(v77,v122 + 1 ,v79[3]));end elseif (v80==8) then v77[v79[2]]();else v77[v79[2]][v79[3]]=v77[v79[4]];end elseif (v80<=14) then if (v80<=11) then if (v80>10) then local v123=v79[2];local v124=v77[v123];local v125=v79[3];for v218=1,v125 do v124[v218]=v77[v123 + v218 ];end else local v126=v79[2];local v127,v128=v70(v77[v126](v13(v77,v126 + 1 ,v79[3])));v72=(v128 + v126) -1 ;local v129=0;for v221=v126,v72 do local v222=0;while true do if (v222==0) then v129=v129 + 1 ;v77[v221]=v127[v129];break;end end end end elseif (v80<=12) then for v223=v79[2],v79[3] do v77[v223]=nil;end elseif (v80>13) then local v266=0;local v267;local v268;local v269;while true do if (1==v266) then v269=0;for v417=v267,v79[4] do v269=v269 + 1 ;v77[v417]=v268[v269];end break;end if (v266==0) then v267=v79[2];v268={v77[v267](v13(v77,v267 + 1 ,v72))};v266=1;end end else v77[v79[2]]=v77[v79[3]] + v77[v79[4]] ;end elseif (v80<=16) then if (v80==15) then local v130=0;local v131;while true do if (v130==0) then v131=v79[2];v77[v131](v13(v77,v131 + 1 ,v79[3]));break;end end elseif v77[v79[2]] then v71=v71 + 1 ;else v71=v79[3];end elseif (v80<=17) then v77[v79[2]]=v79[3];elseif (v80>18) then local v272=0;local v273;while true do if (v272==0) then v273=v79[2];v77[v273]=v77[v273](v13(v77,v273 + 1 ,v72));break;end end else v77[v79[2]]= not v77[v79[3]];end elseif (v80<=29) then if (v80<=24) then if (v80<=21) then if (v80==20) then local v134=v79[2];local v135=v77[v134];local v136=v77[v134 + 2 ];if (v136>0) then if (v135>v77[v134 + 1 ]) then v71=v79[3];else v77[v134 + 3 ]=v135;end elseif (v135<v77[v134 + 1 ]) then v71=v79[3];else v77[v134 + 3 ]=v135;end else v77[v79[2]]=v29(v68[v79[3]],nil,v60);end elseif (v80<=22) then v77[v79[2]][v79[3]]=v77[v79[4]];elseif (v80==23) then v77[v79[2]]={};else local v276=v79[2];v77[v276]=v77[v276](v13(v77,v276 + 1 ,v79[3]));end elseif (v80<=26) then if (v80>25) then local v140=0;local v141;local v142;local v143;while true do if (1==v140) then v143=v79[3];for v372=1,v143 do v142[v372]=v77[v141 + v372 ];end break;end if (0==v140) then v141=v79[2];v142=v77[v141];v140=1;end end else local v144=v79[2];do return v13(v77,v144,v72);end end elseif (v80<=27) then v71=v79[3];elseif (v80>28) then if v77[v79[2]] then v71=v71 + 1 ;else v71=v79[3];end else v77[v79[2]]=v77[v79[3]];end elseif (v80<=34) then if (v80<=31) then if (v80>30) then local v146=0;local v147;local v148;local v149;while true do if (v146==2) then if (v148>0) then if (v149<=v77[v147 + 1 ]) then v71=v79[3];v77[v147 + 3 ]=v149;end elseif (v149>=v77[v147 + 1 ]) then v71=v79[3];v77[v147 + 3 ]=v149;end break;end if (v146==1) then v149=v77[v147] + v148 ;v77[v147]=v149;v146=2;end if (v146==0) then v147=v79[2];v148=v77[v147 + 2 ];v146=1;end end else v77[v79[2]]=v77[v79[3]] * v79[4] ;end elseif (v80<=32) then local v151=v79[2];local v152=v77[v79[3]];v77[v151 + 1 ]=v152;v77[v151]=v152[v79[4]];elseif (v80>33) then v77[v79[2]]=v77[v79[3]] * v79[4] ;else local v281=0;local v282;while true do if (v281==0) then v282=v79[2];v77[v282]=v77[v282]();break;end end end elseif (v80<=37) then if (v80<=35) then do return;end elseif (v80==36) then v77[v79[2]]=v79[3]~=0 ;else local v284=v79[2];local v285=v77[v284];for v348=v284 + 1 ,v79[3] do v7(v285,v77[v348]);end end elseif (v80<=38) then local v156=0;local v157;while true do if (v156==0) then v157=v79[2];v77[v157]=v77[v157](v13(v77,v157 + 1 ,v72));break;end end elseif (v80>39) then v77[v79[2]]={};else local v287=0;local v288;local v289;local v290;while true do if (v287==1) then v290=v77[v288 + 2 ];if (v290>0) then if (v289>v77[v288 + 1 ]) then v71=v79[3];else v77[v288 + 3 ]=v289;end elseif (v289<v77[v288 + 1 ]) then v71=v79[3];else v77[v288 + 3 ]=v289;end break;end if (0==v287) then v288=v79[2];v289=v77[v288];v287=1;end end end elseif (v80<=61) then if (v80<=50) then if (v80<=45) then if (v80<=42) then if (v80==41) then v77[v79[2]][v79[3]]=v79[4];else local v160=v79[2];local v161={v77[v160](v13(v77,v160 + 1 ,v72))};local v162=0;for v225=v160,v79[4] do v162=v162 + 1 ;v77[v225]=v161[v162];end end elseif (v80<=43) then for v228=v79[2],v79[3] do v77[v228]=nil;end elseif (v80==44) then v77[v79[2]]= not v77[v79[3]];else local v292=0;local v293;local v294;while true do if (v292==0) then v293=v79[2];v294=v77[v79[3]];v292=1;end if (v292==1) then v77[v293 + 1 ]=v294;v77[v293]=v294[v79[4]];break;end end end elseif (v80<=47) then if (v80==46) then local v163=0;local v164;while true do if (v163==0) then v164=v79[2];v77[v164](v77[v164 + 1 ]);break;end end else local v165=v79[2];v77[v165](v13(v77,v165 + 1 ,v79[3]));end elseif (v80<=48) then v77[v79[2]]=v79[3]~=0 ;elseif (v80>49) then local v295=v79[2];v77[v295]=v77[v295](v13(v77,v295 + 1 ,v79[3]));else local v297=0;local v298;local v299;local v300;local v301;while true do if (v297==1) then v72=(v300 + v298) -1 ;v301=0;v297=2;end if (v297==2) then for v420=v298,v72 do local v421=0;while true do if (0==v421) then v301=v301 + 1 ;v77[v420]=v299[v301];break;end end end break;end if (v297==0) then v298=v79[2];v299,v300=v70(v77[v298](v77[v298 + 1 ]));v297=1;end end end elseif (v80<=55) then if (v80<=52) then if (v80==51) then local v167=0;local v168;local v169;while true do if (v167==0) then v168=v79[3];v169=v77[v168];v167=1;end if (v167==1) then for v376=v168 + 1 ,v79[4] do v169=v169   .. v77[v376] ;end v77[v79[2]]=v169;break;end end else local v170=v79[2];local v171=v77[v170 + 2 ];local v172=v77[v170] + v171 ;v77[v170]=v172;if (v171>0) then if (v172<=v77[v170 + 1 ]) then v71=v79[3];v77[v170 + 3 ]=v172;end elseif (v172>=v77[v170 + 1 ]) then local v379=0;while true do if (v379==0) then v71=v79[3];v77[v170 + 3 ]=v172;break;end end end end elseif (v80<=53) then local v174=v79[2];local v175=v79[4];local v176=v174 + 2 ;local v177={v77[v174](v77[v174 + 1 ],v77[v176])};for v230=1,v175 do v77[v176 + v230 ]=v177[v230];end local v178=v177[1];if v178 then local v302=0;while true do if (v302==0) then v77[v176]=v178;v71=v79[3];break;end end else v71=v71 + 1 ;end elseif (v80>54) then if (v79[2]==v77[v79[4]]) then v71=v71 + 1 ;else v71=v79[3];end else v77[v79[2]]=v79[3];end elseif (v80<=58) then if (v80<=56) then v77[v79[2]]=v59[v79[3]];elseif (v80==57) then local v305=v79[2];local v306=v79[4];local v307=v305 + 2 ;local v308={v77[v305](v77[v305 + 1 ],v77[v307])};for v355=1,v306 do v77[v307 + v355 ]=v308[v355];end local v309=v308[1];if v309 then v77[v307]=v309;v71=v79[3];else v71=v71 + 1 ;end else v77[v79[2]]=v60[v79[3]];end elseif (v80<=59) then local v181=0;local v182;while true do if (v181==0) then v182=v79[2];v77[v182]=v77[v182](v77[v182 + 1 ]);break;end end elseif (v80==60) then local v312=0;local v313;local v314;local v315;local v316;while true do if (v312==0) then v313=v79[2];v314,v315=v70(v77[v313](v77[v313 + 1 ]));v312=1;end if (v312==2) then for v422=v313,v72 do local v423=0;while true do if (v423==0) then v316=v316 + 1 ;v77[v422]=v314[v316];break;end end end break;end if (v312==1) then v72=(v315 + v313) -1 ;v316=0;v312=2;end end else local v317=0;local v318;while true do if (v317==0) then v318=v79[2];do return v77[v318](v13(v77,v318 + 1 ,v79[3]));end break;end end end elseif (v80<=71) then if (v80<=66) then if (v80<=63) then if (v80>62) then local v183=0;local v184;local v185;local v186;local v187;while true do if (2==v183) then for v383=v184,v72 do v187=v187 + 1 ;v77[v383]=v185[v187];end break;end if (v183==0) then v184=v79[2];v185,v186=v70(v77[v184](v13(v77,v184 + 1 ,v79[3])));v183=1;end if (1==v183) then v72=(v186 + v184) -1 ;v187=0;v183=2;end end else local v188=v79[2];v77[v188]=v77[v188](v77[v188 + 1 ]);end elseif (v80<=64) then local v190=v68[v79[3]];local v191;local v192={};v191=v10({},{__index=function(v233,v234) local v235=0;local v236;while true do if (v235==0) then v236=v192[v234];return v236[1][v236[2]];end end end,__newindex=function(v237,v238,v239) local v240=0;local v241;while true do if (0==v240) then v241=v192[v238];v241[1][v241[2]]=v239;break;end end end});for v242=1,v79[4] do local v243=0;local v244;while true do if (v243==0) then v71=v71 + 1 ;v244=v67[v71];v243=1;end if (v243==1) then if (v244[1]==65) then v192[v242-1 ]={v77,v244[3]};else v192[v242-1 ]={v59,v244[3]};end v76[ #v76 + 1 ]=v192;break;end end end v77[v79[2]]=v29(v190,v191,v60);elseif (v80>65) then v77[v79[2]]=v77[v79[3]] + v77[v79[4]] ;else v77[v79[2]]=v77[v79[3]];end elseif (v80<=68) then if (v80>67) then local v194=v68[v79[3]];local v195;local v196={};v195=v10({},{__index=function(v245,v246) local v247=v196[v246];return v247[1][v247[2]];end,__newindex=function(v248,v249,v250) local v251=v196[v249];v251[1][v251[2]]=v250;end});for v253=1,v79[4] do v71=v71 + 1 ;local v254=v67[v71];if (v254[1]==65) then v196[v253-1 ]={v77,v254[3]};else v196[v253-1 ]={v59,v254[3]};end v76[ #v76 + 1 ]=v196;end v77[v79[2]]=v29(v194,v195,v60);elseif (v77[v79[2]]==v79[4]) then v71=v71 + 1 ;else v71=v79[3];end elseif (v80<=69) then v77[v79[2]]=v77[v79[3]][v77[v79[4]]];elseif (v80==70) then v77[v79[2]]=v77[v79[3]][v77[v79[4]]];else v77[v79[2]]=v77[v79[3]][v79[4]];end elseif (v80<=76) then if (v80<=73) then if (v80>72) then v77[v79[2]]=v77[v79[3]][v79[4]];else v77[v79[2]]=v60[v79[3]];end elseif (v80<=74) then local v204=0;local v205;while true do if (v204==0) then v205=v79[2];do return v13(v77,v205,v72);end break;end end elseif (v80>75) then local v327=0;local v328;local v329;while true do if (v327==1) then for v426=1, #v76 do local v427=v76[v426];for v434=0, #v427 do local v435=v427[v434];local v436=v435[1];local v437=v435[2];if ((v436==v77) and (v437>=v328)) then local v455=0;while true do if (v455==0) then v329[v437]=v436[v437];v435[1]=v329;break;end end end end end break;end if (v327==0) then v328=v79[2];v329={};v327=1;end end else do return;end end elseif (v80<=79) then if (v80<=77) then v77[v79[2]]();elseif (v80>78) then v60[v79[3]]=v77[v79[2]];else v60[v79[3]]=v77[v79[2]];end elseif (v80<=80) then v77[v79[2]][v79[3]]=v79[4];elseif (v80>81) then local v334=v79[3];local v335=v77[v334];for v364=v334 + 1 ,v79[4] do v335=v335   .. v77[v364] ;end v77[v79[2]]=v335;elseif (v79[2]==v77[v79[4]]) then v71=v71 + 1 ;else v71=v79[3];end v71=v71 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
